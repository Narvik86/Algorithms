# HW7_Hyungtaek Kim
# CS 23440-0W3
		
		
		
		
		
		
		
		
		
		.data
array:	.word		19,-2,95,26,83,17,-5,69,-16,10,45,-17,88,27,-13,67,-48,6,-66,40
			19,-2,95,26,83,17,-5,69,-16,10,45,-17,88,27,-13,67,-48,6,-66,40
			19,-2,95,26,83,17,-5,69,-16,10,45,-17,88,27,-13,67,-48,6,-66,40
			19,-2,95,26,83,17,-5,69,-16,10,45,-17,88,27,-13,67,-48,6,-66,40
			19,-2,95,26,83,17,-5,69,-16,10,45,-17,88,27,-13,67,-48,6,-66,40
			19,-2,95,26,83,17,-5,69,-16,10,45,-17,88,27,-13,67,-48,6,-66,40
			19,-2,95,26,83,17,-5,69,-16,10,45,-17,88,27,-13,67,-48,6,-66,40
			19,-2,95,26,83,17,-5,69,-16,10,45,-17,88,27,-13,67,-48,6,-66,40
			19,-2,95,26,83,17,-5,69,-16,10,45,-17,88,27,-13,67,-48,6,-66,40
			19,-2,95,26,83,17,-5,69,-16,10,45,-17,88,27,-13,67,-48,6,-66,40
			19,-2,95,26,83,17,-5,69,-16,10,45,-17,88,27,-13,67,-48,6,-66,40
			19,-2,95,26,83,17,-5,69,-16,10,45,-17,88,27,-13,67,-48,6,-66,40
			19,-2,95,26,83,17,-5,69,-16,10,45,-17,88,27,-13,67,-48,6,-66,40
			19,-2,95,26,83,17,-5,69,-16,10,45,-17,88,27,-13,67,-48,6,-66,40
			19,-2,95,26,83,17,-5,69,-16,10,45,-17,88,27,-13,67,-48,6,-66,40
			19,-2,95,26,83,17,-5,69,-16,10,45,-17,88,27,-13,67,-48,6,-66,40
			19,-2,95,26,83,17,-5,69,-16,10,45,-17,88,27,-13,67,-48,6,-66,40
			19,-2,95,26,83,17,-5,69,-16,10,45,-17,88,27,-13,67,-48,6,-66,40
			19,-2,95,26,83,17,-5,69,-16,10,45,-17,88,27,-13,67,-48,6,-66,40
			19,-2,95,26,83,17,-5,69,-16,10,45,-17,88,27,-13,67,-48,6,-66,40
			19,-2,95,26,83,17,-5,69,-16,10,45,-17,88,27,-13,67,-48,6,-66,40
			19,-2,95,26,83,17,-5,69,-16,10,45,-17,88,27,-13,67,-48,6,-66,40
			19,-2,95,26,83,17,-5,69,-16,10,45,-17,88,27,-13,67,-48,6,-66,40
			19,-2,95,26,83,17,-5,69,-16,10,45,-17,88,27,-13,67,-48,6,-66,40
			19,-2,95,26,83,17,-5,69,-16,10,45,-17,88,27,-13,67,-48,6,-66,40
			
space:		.asciiz		" "

len:		.word		500

		.text
main:


	lw	$a1,	len			# get arguments length of array 
	la	$a0,	array			# and array
	jal 	sort			# fuction printArray



	li	$v0,	10
	syscall



########## sortArray ##########
	


 sort:
 	move 	$a2,	$a1       	# $a2=n
  	sub 	$a1,	$a1,	1       	# $a1=n-1
   	li 	$t0,	0   		# i=0
loop1:
  	 beq 	$t0,	$a1,	exit	# if i=n-1, finish the loop
  	 move 	$s0,	$t0     		# i = min
   	move 	$t1,	$t0
loop2:      
  	add 	$t1,	$t1,	1    	# j=i+1
   	bne 	$t1,	$a2, 	compare  
   	j 	swap         		# if i == j go to next location
               
   compare:
  	li 	$t2,	4      
  	mul 	$t3,	$t2,	$t1
   	add 	$t3,	$t3,	$a0      
  	mul 	$t4,	$t2,	$s0  
  	add 	$t4,	$t4,	$a0      
 	lw 	$t5,	0($t3)       		# t5=array[j]      
 	lw 	$t6,	0($t4)       		# t6=array[min]  
 	slt	$t7,	$t5,	$t6       	
  	bne 	$t7,	1,	loop2       	#  if not $t5<$t6
              
   	move 	$s0,	$t1       # else, min = j      
  	j	loop2           
  	
    swap:  
   	li 	$t2,	4      
  	mul 	$t3,	$t2,	$t0      
   	add 	$t3,	$t3,	$a0  
   	lw 	$t5,	0($t3)       # t5=array[i]  
   	mul 	$t4,	$t2,	$s0  
   	add 	$t4,	$t4,	$a0              
   	lw 	$t6,	0($t4)       # t6=array[min]
   	sw 	$t5,	($t4)
   	sw 	$t6,	($t3)
   	add 	$t0,	$t0,	1
   	j loop1
exit:
   jr $ra          
